org 0x8400
jmp start
S	db 0
J	dw 0    ;定义变量

Y_L          db 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
             db 0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
             db 0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
             db 0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,2,2,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0
             db 0,0,1,1,0,0,0,0,1,1,2,2,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0
             db 0,0,1,1,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0
             db 0,0,1,1,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0
             db 0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,1,1,0
             db 0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0
             db 0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0
             db 0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0
             db 0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0
             db 0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
             db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

;主函数开始
start:
 
		mov  al,0x13		  ;进入图像模式
		mov  ah,0x00
		int  10h   

   ;***********************
;自定义颜色 
   ;***********************   
		mov  ax,0x0a000      
		mov  es,ax
		mov  al,128         ;颜色号
		mov  dx,0x3c8
		out  dx,al

		mov  al,0           ;R
		mov  dx,0x3c9
		out  dx,al

		mov  al,231         ;G
		mov  dx,0x3c9
		out  dx,al

		mov  al,52          ;B
		mov  dx,0x3c9
		out  dx,al


       mov  al,129          	    ;颜色号
		mov  dx,0x3c8
		out  dx,al

		mov  al,255           ;R
		mov  dx,0x3c9
		out  dx,al

		mov  al,172           ;G
		mov  dx,0x3c9
		out  dx,al

		mov  al,203           ;B
		mov  dx,0x3c9
		out  dx,al

		call huakuang        		 ;画框

		mov  bx,0     
		mov  cx,0
		mov  si,0
		mov  bx,0
       sti
		mov  word [J],0
		mov  word [ds:0x24],int_key       ;开启键盘中断
		mov  word [ds:0x26],0
	
		jmp  $

;主函数结束

;**********************
	;画横线
	;ax表示横线初始y坐标
;bx表示横线初始x坐标
;cx表示横线长度

;**********************
draw_h:	
		push  ax		
		push  bx				
push  cx	
push  dx
		
		mov   dx,320
		mul   dx
		add   bx,ax
		mov   dl,128

x1: 	mov   [es:bx],dl   	   ;打点
		inc   bx
		dec   cx
		jnz   x1

		pop   dx
		pop   cx
		pop   bx
		pop   ax
		ret

;**********************
;画竖线
;ax表示竖线初始y坐标
;bx表示竖线初始x坐标 
;**********************
draw_s:
		push  ax		
		push  bx		
		push  cx				
push  dx
		
		mov   dx,320
		mul   dx
		add   bx,ax
		mov   dl,128

x2:    mov   [es:bx],dl
		add   bx,320
		dec   cx
		jnz   x2

		pop   dx
		pop   cx
		pop   bx
		pop   ax

		ret

;画框
huakuang:
		push   ax
		push   bx
		push   cx

		mov   ax,5       ;y
		mov   bx,10      ;x
		mov   cx,300
		call  draw_h     ;画横线1
  
		mov   ax,5   	 ;y
		mov   bx,10   	 ;x
		mov   cx,190
		call  draw_s     ;画竖线

		mov   ax,195     ;y
		mov   bx,10   	 ;x
		mov   cx,300
		call  draw_h	 ;画横线2

		mov   ax,5   	 ;y
		mov   bx,310  	 ;x
		mov   cx,190
		call  draw_s	 ;画竖线2
	
		pop   cx
		pop   bx
		pop   ax
		
ret

draw_YL:
		push  ax
		push  bx
		push  cx
		push  si

n: 	   	mov   al,[ds:Y_L+bx]
    	inc   bx
    	inc   si
    	inc   cx
    	cmp   al,1
    	jz    n1
    	cmp   al,2
    	jz    n4
    	cmp   cx,39            		;一行共40个1或0
    	jz    n2

n3: 	cmp   bx,1209      		;共1209个像素点
    	jb    n      		        ;小于跳
   		pop   si
    	pop   cx
    	pop   bx 
    	pop   ax
	
		ret

n1: 	mov   dl,128			;打蓝色点
    	mov   [es:si],dl
    	jmp   n 
   
n4:		mov   dl,129		;打粉色点
   		mov   [es:si],dl
   		jmp   n

n2:		add   si,281          	;换行
    	mov   cx,0
    	jmp   n3

;***************
;键盘中断
;**************
int_key:
		mov   dx,0x60
		in    al,dx
       cmp   al,0x39
		jnz   xA         	 ;没摁下就跳
mov   si,0

clear5:
cmp   si,320*200               		 ;清屏
		ja    xk1
		mov   al,0
		mov   [es:si],al
		inc   si
		jmp   clear5

xk1:	call  huakuang
		mov   word[J],1          ;按键按下J=1
		mov   si,27060           ;初始位置
		call  draw_YL



;*************************
;按下A幽灵向左移动
;**************************	
xA:		cmp   word[J],0
		jz    xend              ;没有按下空格，就不能移动
		cmp   al,0x1e      	;按键A
		jnz   xD
		dec   si
		mov   [S],si	
		mov   si,0

clear1:
cmp   si,320*200
		ja    xa1
		mov   al,0
		mov   [es:si],al
		inc   si
		jmp   clear1

xa1:	
		call  huakuang
		mov   si,[S]
		call  draw_YL
		mov   [S],si
;*************************
;按下D幽灵向右移动
;**************************
xD:		cmp   al,0x20
		jnz   xW               ;按键D
		inc   si
		mov   [S],si	
		mov   si,0
clear2:
cmp   si,320*200
		ja    xd1
		mov   al,0
		mov   [es:si],al
		inc   si
		jmp   clear2
xd1:
		call  huakuang
		mov   si,[S]
		call  draw_YL
		mov   [S],si
;*************************
;按下W幽灵向上移动
;**************************
xW:		cmp   al,0x11               ;按键W
		jnz   xS
		sub   si,320
		mov   [S],si	

		mov   si,0
clear3:
cmp   si,320*200
		ja    xw1
		mov   al,0
		mov   [es:si],al
		inc   si
		jmp   clear3

xw1:
		call  huakuang
		mov   si,[S]
		call  draw_YL
		mov   [S],si
;************************
;按S幽灵向下移动
;*************************
xS:		cmp   al,0x1f
		jnz   xend
		add   si,320
		mov   [S],si	

		mov   si,0
clear4:		cmp   si,320*200
		ja    xs1
		mov   al,0
		mov   [es:si],al
		inc   si
		jmp   clear4

xs1:
		call  huakuang
		mov   si,[S]
		call  draw_YL
		mov   [S],si
  
xend:	
		mov   dx,0x20
		mov   al,0x61
		out   dx,al
	            
	        iret
